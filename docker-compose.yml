version: '3.8'

services:
  # IAM microservice
  iam-api:
    build:
      context: ./services/iam-service
      dockerfile: IAM/Dockerfile
    container_name: iam-api
    ports:
      - "8012:8012"
    restart: always
    depends_on:
      - iam-db

  iam-db:
    image: mysql:8.0
    container_name: iam-db
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_DATABASE: iam
    ports:
      - "3307:3306"
    restart: always

  # Local Management microservice
  local-api:
    build:
      context: ./services/local-management-service
      dockerfile: LocalManagement/Dockerfile
    container_name: local-api
    ports:
      - "8013:8013"
    restart: always
    depends_on:
      - local-db

  local-db:
    image: mysql:8.0
    container_name: local-db
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_DATABASE: local
    ports:
      - "3308:3306"
    restart: always

  # Profile microservice
  profile-api:
    build:
      context: ./services/profile-service
      dockerfile: Profiles/Dockerfile
    container_name: profile-api
    ports:
      - "8015:8015"
    restart: always
    depends_on:
      - profile-db

  profile-db:
    image: mysql:8.0
    container_name: profile-db
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_DATABASE: profiles
    ports:
      - "3310:3306"
    restart: always

  # Booking microservice
  booking-api:
    build:
      context: ./services/booking-service
      dockerfile: Booking/Dockerfile
    container_name: booking-api
    depends_on:
      - booking-db
    ports:
      - "8017:8017"
    restart: 
        always
  
  booking-db:
    image: mysql:8.0
    container_name: booking-db
    environment:
        MYSQL_ROOT_PASSWORD: 12345678
        MYSQL_DATABASE: booking
    restart:
        always
    ports:
      - "3312:3306"

  # Notification microservice
  notification-api:
    image: notification
    container_name: notification-api
    build:
      context: ./services/notification-service
      dockerfile: Notification/Dockerfile
    ports:
      - "8014:8014"
    depends_on:
      - notification-db
    restart:
      always

  notification-db:
    image: mysql:8.0
    container_name: notification-db
    ports:
      - "3309:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_DATABASE: notification
    restart:
      always

  # Subscription microservice
  subscription-api:
    build:
      context: ./services/subscription-service
      dockerfile: Subscriptions/Dockerfile
    container_name: subscription-api
    depends_on:
      - subscriptions-db
    ports:
      - "8016:8016"
    restart:
      always

  subscriptions-db:
    image: mysql:8.0
    container_name: subscriptions-db
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_DATABASE: subscriptions
    ports:
      - "3311:3306"
    restart:
      always
      
  # Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: ApiGateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8000:80"
    depends_on:
      - iam-api
      - local-api
      - profile-api
      - booking-api
      - notification-api
      - subscription-api
    restart:
      always
    
  
    
    
